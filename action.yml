name: 'Merge coverage reports'
author: 'selfagency'
description: 'Merge Istanbul coverage reports'
branding:
  icon: 'git-merge'
  color: 'green'
inputs:
  coverage-reports:
    description: 'Path to coverage reports'
    required: true
  output-folder:
    description: 'Where to output results'
    required: true
  formats:
    description: 'Comma-separated list of formats to output'
    required: true
outputs:
  summary:
    description: 'Coverage summary'
    value: steps.merge-coverage.outputs.summary
  json:
    description: 'JSON coverage summary'
    value: steps.merge-coverage.outputs.json
runs:
  using: 'composite'
  steps:
    - name: Setup Node
      uses: actions/setup-node@v2
      with:
        node-version: 16

    - name: Cache dependencies
      uses: actions/cache@v2
      id: cache
      with:
        path: '**/node_modules'
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-

    - name: Configure reporters
      id: configure-reporters
      uses: actions/github-script@v6
      if: ${{ !steps.merge-coverage.outputs.skip }}
      with:
        script: |
          const reporters = '${{ inputs.formats }}'.split(',');
          let reporterConfig = '';
          reporters.forEach(reporter => {
            reporterConfig += `--reporter ${reporter} `;
          });
          core.setOutput('reporters', reporterConfig);

    - name: Install dependencies
      shell: bash
      if: ${{ steps.cache.outputs.cache-hit != 'true' }}
      run: npm ci

    - name: Collect coverage reports
      uses: actions/github-script@v6
      with:
        script: |
          const {readdir, writeFile, copyFile, mkdir} = require('fs').promises;
          await mkdir(`${{ github.workspace }}/coverage`);
          const reportDirs = (await readdir('${{ inputs.coverage-reports }}', { withFileTypes: true })).filter(dirent => dirent.isDirectory()).map(dirent => dirent.name);
          for (const dir of reportDirs) {
            await copyFile(`${{ inputs.coverage-reports }}/${dir}/coverage-final.json`, `${{ github.workspace }}/coverage/coverage-${dir}.json`)
          };

    - name: Merge coverage
      shell: bash
      run: |
        mkdir -p ${{ github.workspace }}/.nyc_output
        ${{ github.workspace }}/node_modules/.bin/nyc merge ${{ github.workspace }}/coverage ${{ github.workspace }}/.nyc_output/coverage-final.json
        echo "::debug::$(cat ${{ github.workspace }}/.nyc_output/coverage-final.json)"

    - name: Output coverage report
      shell: bash
      if: ${{ !steps.merge-coverage.outputs.skip }}
      working-directory: ${{ github.workspace }}
      run: |
        ${{ github.workspace }}/node_modules/.bin/nyc report --tempDir ${{ github.workspace }}/.nyc_output --reporter text --reporter json-summary --reporter text-summary ${{ steps.configure-reporters.outputs.reporters }} --reportDir ${{ inputs.output-folder }}
        echo "::set-output name=json::$(cat ${{ inputs.output-folder }}/coverage-summary.json)"

    - name: Upload coverage reports
      uses: actions/upload-artifact@v2
      if: ${{ !steps.merge-coverage.outputs.skip }}
      with:
        name: coverage-reports
        path: |
          ${{ inputs.output-folder }}
          ${{ github.workspace }}/.nyc_output
          ${{ github.workspace }}/coverage
